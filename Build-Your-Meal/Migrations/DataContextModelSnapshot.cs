// <auto-generated />
using System;
using Build_Your_Meal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Build_Your_Meal.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Build_Your_Meal.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.ClientDiscount", b =>
                {
                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientDiscounts");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.IngredientMeal", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("IngredientMeals");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.MenuMeal", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("MenuMeals");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Bill")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.OrderMeal", b =>
                {
                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("MealId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderMeals");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.ClientDiscount", b =>
                {
                    b.HasOne("Build_Your_Meal.Models.Client", "Client")
                        .WithMany("ClientDiscounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Build_Your_Meal.Models.Discount", "Discount")
                        .WithMany("ClientDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.IngredientMeal", b =>
                {
                    b.HasOne("Build_Your_Meal.Models.Ingredient", "Ingredient")
                        .WithMany("IngredientMeals")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Build_Your_Meal.Models.Meal", "Meal")
                        .WithMany("IngredientMeals")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Meal", b =>
                {
                    b.HasOne("Build_Your_Meal.Models.Discount", null)
                        .WithMany("Meals")
                        .HasForeignKey("DiscountId");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.MenuMeal", b =>
                {
                    b.HasOne("Build_Your_Meal.Models.Meal", "Meal")
                        .WithMany("MenuMeals")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Build_Your_Meal.Models.Menu", "Menu")
                        .WithMany("MenuMeals")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.OrderMeal", b =>
                {
                    b.HasOne("Build_Your_Meal.Models.Meal", "Meal")
                        .WithMany("OrderMeals")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Build_Your_Meal.Models.Order", "Order")
                        .WithMany("OrderMeals")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Client", b =>
                {
                    b.Navigation("ClientDiscounts");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Discount", b =>
                {
                    b.Navigation("ClientDiscounts");

                    b.Navigation("Meals");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Ingredient", b =>
                {
                    b.Navigation("IngredientMeals");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Meal", b =>
                {
                    b.Navigation("IngredientMeals");

                    b.Navigation("MenuMeals");

                    b.Navigation("OrderMeals");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Menu", b =>
                {
                    b.Navigation("MenuMeals");
                });

            modelBuilder.Entity("Build_Your_Meal.Models.Order", b =>
                {
                    b.Navigation("OrderMeals");
                });
#pragma warning restore 612, 618
        }
    }
}
